n = 17209865306489383127800020243389994329129743604782790572071575275930356482173664633977129059765483365641382694889746793832394394570779520318736174413698255275805470489995770799549145326336810606098666485462172397721883061380164674372281155031229403077923081446873681038939824476853501573626662210456685550050398627753809494063023262928406194832122173907376911569530179213802008987425021865006236985258208235745676711294952229465208427722435166889999294578405054346630724018303425483416613451938567146420297094727347064526763529390676971710365525083049556260598332852178425692853805520818042005192063672211992678540011
e = 3
cipherkey = 142196723273747238898852175173915220249887834079871068954399297555327440564641299650087764716642697466878642687260087329740593337673114537926971425515696694822194006024953138119955781575720865321942965774838545548158954058397248000


def check(cipherkey):
    low = 1
    high = cipherkey

    while low <= high:
        mid = (low + high) // 2
        if mid**3 == cipherkey:
            return mid
        elif mid**3 < cipherkey:
            low = mid + 1
        else:
            high = mid - 1

    return 0


while not (key := check(cipherkey)):
    cipherkey += n

from Crypto.Util.number import long_to_bytes

print(long_to_bytes(key))
